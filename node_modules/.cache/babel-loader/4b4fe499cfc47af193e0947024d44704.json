{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\cv-react\\\\src\\\\components\\\\Form\\\\FormInput.tsx\";\nimport { DataInput } from \"./FormStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nconst formState = {\n  name: \"\",\n  email: \"\",\n  message: \"\"\n};\n\nconst FormInput = props => {\n  const nameChangeHandler = event => {\n    setFormData(prevState => ({ ...prevState,\n      name: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(DataInput, {\n    placeholder: props.labelName,\n    minLength: props.min,\n    onChange: nameChangeHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FormInput;\nexport default FormInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"sources":["D:/Work/cv-react/src/components/Form/FormInput.tsx"],"names":["DataInput","formState","name","email","message","FormInput","props","nameChangeHandler","event","setFormData","prevState","target","value","labelName","min"],"mappings":";AAAA,SAASA,SAAT,QAA0B,cAA1B;;AAMC;AAED,MAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,EADU;AAEhBC,EAAAA,KAAK,EAAE,EAFS;AAGhBC,EAAAA,OAAO,EAAE;AAHO,CAAlB;;AAMA,MAAMC,SAA0B,GAAIC,KAAD,IAAW;AAE5C,QAAMC,iBAAiB,GAAIC,KAAD,IAAgD;AACxEC,IAAAA,WAAW,CAAEC,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgBR,MAAAA,IAAI,EAAEM,KAAK,CAACG,MAAN,CAAaC;AAAnC,KAAhB,CAAD,CAAX;AACD,GAFD;;AAKA,sBACE,QAAC,SAAD;AAAW,IAAA,WAAW,EAAEN,KAAK,CAACO,SAA9B;AAAyC,IAAA,SAAS,EAAEP,KAAK,CAACQ,GAA1D;AAA+D,IAAA,QAAQ,EAAEP;AAAzE;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAVD;;KAAMF,S;AAYN,eAAeA,SAAf","sourcesContent":["import { DataInput } from \"./FormStyles\";\r\n\r\ninterface Props {\r\n  labelName: string;\r\n  min: number;\r\n  onChange: (event: React.ChangeEvent<HTMLInputElement>)=>void;\r\n};\r\n\r\nconst formState = {\r\n  name: \"\",\r\n  email: \"\",\r\n  message: \"\",\r\n};\r\n\r\nconst FormInput: React.FC<Props> = (props) => {\r\n\r\n  const nameChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormData((prevState) => ({ ...prevState, name: event.target.value }));\r\n  };\r\n\r\n\r\n  return(\r\n    <DataInput placeholder={props.labelName} minLength={props.min} onChange={nameChangeHandler}/>\r\n  )\r\n};\r\n\r\nexport default FormInput"]},"metadata":{},"sourceType":"module"}
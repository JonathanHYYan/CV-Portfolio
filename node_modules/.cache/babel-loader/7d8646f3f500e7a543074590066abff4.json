{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\cv-react\\\\src\\\\components\\\\Form\\\\FormMessage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { MessageInput } from \"./FormStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormMessage = props => {\n  _s();\n\n  const [enteredState, setEnteredState] = useState(\"\");\n\n  const inputChangeHandler = event => {\n    setEnteredState(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MessageInput, {\n      rows: 5,\n      placeholder: props.labelName,\n      onChange: inputChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(FormMessage, \"mrQktSl1doqVQ8oHqie4lt3QGQM=\");\n\n_c = FormMessage;\nexport default FormMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormMessage\");","map":{"version":3,"sources":["D:/Work/cv-react/src/components/Form/FormMessage.tsx"],"names":["useState","MessageInput","FormMessage","props","enteredState","setEnteredState","inputChangeHandler","event","target","value","labelName"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,QAA6B,cAA7B;;;;AAMA,MAAMC,WAA4B,GAAIC,KAAD,IAAW;AAAA;;AAC9C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMM,kBAAkB,GAAIC,KAAD,IAAgB;AACzCF,IAAAA,eAAe,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAE,CAApB;AAAuB,MAAA,WAAW,EAAEN,KAAK,CAACO,SAA1C;AAAqD,MAAA,QAAQ,EAAEJ;AAA/D;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAZD;;GAAMJ,W;;KAAAA,W;AAcN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { MessageInput } from \"./FormStyles\";\r\n\r\ninterface Props {\r\n  labelName: string,\r\n}\r\n\r\nconst FormMessage: React.FC<Props> = (props) => {\r\n  const [enteredState, setEnteredState] = useState(\"\")\r\n\r\n  const inputChangeHandler = (event: any) => {\r\n    setEnteredState(event.target.value)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MessageInput rows={5} placeholder={props.labelName} onChange={inputChangeHandler}/>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default FormMessage;"]},"metadata":{},"sourceType":"module"}
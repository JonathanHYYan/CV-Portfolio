{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\cv-react\\\\src\\\\store\\\\context.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollContext = /*#__PURE__*/React.createContext({\n  scroll: false,\n  windowScrollY: 0\n});\nexport const ScrollContextProvider = props => {\n  _s();\n\n  const [scroll, setScroll] = useState(false);\n  let windowScrollY;\n  useEffect(() => {\n    window.addEventListener(\"wheel\", e => {\n      if (e.deltaY) {\n        setScroll(true);\n      }\n    });\n    setTimeout(function () {\n      if (!scroll) {\n        setScroll(true);\n      }\n    }, 2000);\n  }, []);\n  window.addEventListener(\"scroll\", () => {\n    windowScrollY = window.scrollY;\n    return windowScrollY;\n  });\n  return /*#__PURE__*/_jsxDEV(ScrollContext.Provider, {\n    value: {\n      scroll: scroll,\n      windowScrollY: 0\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ScrollContextProvider, \"h88QyPIB9amt30SbYny45qXhMVQ=\");\n\n_c = ScrollContextProvider;\nexport default ScrollContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollContextProvider\");","map":{"version":3,"sources":["D:/Work/cv-react/src/store/context.tsx"],"names":["React","useEffect","useState","ScrollContext","createContext","scroll","windowScrollY","ScrollContextProvider","props","setScroll","window","addEventListener","e","deltaY","setTimeout","scrollY","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,MAAMC,aAAa,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACxCC,EAAAA,MAAM,EAAE,KADgC;AAExCC,EAAAA,aAAa,EAAE;AAFyB,CAApB,CAAtB;AAKA,OAAO,MAAMC,qBAAqB,GAAGC,KAAK,IAAI;AAAA;;AAC5C,QAAM,CAACH,MAAD,EAASI,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,MAAII,aAAJ;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAkCC,CAAD,IAAO;AACtC,UAAIA,CAAC,CAACC,MAAN,EAAc;AACZJ,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,KAJD;AAKAK,IAAAA,UAAU,CAAC,YAAW;AACpB,UAAG,CAACT,MAAJ,EAAW;AACTI,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,KAJS,EAIR,IAJQ,CAAV;AAKD,GAXQ,EAWN,EAXM,CAAT;AAaAC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACtCL,IAAAA,aAAa,GAAGI,MAAM,CAACK,OAAvB;AACA,WAAOT,aAAP;AACD,GAHD;AAKA,sBACE,QAAC,aAAD,CAAe,QAAf;AACA,IAAA,KAAK,EAAI;AACPD,MAAAA,MAAM,EAAEA,MADD;AAEPC,MAAAA,aAAa,EAAE;AAFR,KADT;AAAA,cAMGE,KAAK,CAACQ;AANT;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjCM;;GAAMT,qB;;KAAAA,qB;AAkCb,eAAeJ,aAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nconst ScrollContext = React.createContext({\r\n  scroll: false,\r\n  windowScrollY: 0,\r\n});\r\n\r\nexport const ScrollContextProvider = props => {\r\n  const [scroll, setScroll] = useState(false);\r\n  let windowScrollY;\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"wheel\", (e) => {\r\n      if (e.deltaY) {\r\n        setScroll(true);\r\n      }\r\n    });\r\n    setTimeout(function() {\r\n      if(!scroll){\r\n        setScroll(true);\r\n      }\r\n    },2000)\r\n  }, []);\r\n\r\n  window.addEventListener(\"scroll\", () => {\r\n    windowScrollY = window.scrollY;\r\n    return windowScrollY\r\n  });\r\n\r\n  return (\r\n    <ScrollContext.Provider\r\n    value = {{\r\n      scroll: scroll,\r\n      windowScrollY: 0,\r\n    }}\r\n    >\r\n      {props.children}\r\n    </ScrollContext.Provider>\r\n  )\r\n\r\n}\r\nexport default ScrollContext;\r\n"]},"metadata":{},"sourceType":"module"}
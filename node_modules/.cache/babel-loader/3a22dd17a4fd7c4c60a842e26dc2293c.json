{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\cv-react\\\\src\\\\components\\\\Form\\\\Form.tsx\",\n    _s = $RefreshSig$();\n\nimport { Card, CardTitle } from \"../UI/Card\";\nimport { useState } from \"react\";\nimport FormInput from \"./FormInput\";\nimport FormMessage from \"./FormMessage\";\nimport { ContactForm, Button, FormControls, FormError } from \"./FormStyles\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formState = {\n  name: \"\",\n  email: \"\",\n  message: \"\"\n};\nconst touchState = {\n  name: false,\n  email: false,\n  message: false\n};\n\nconst Form = () => {\n  _s();\n\n  const [formData, setFormData] = useState(formState);\n  const [isValid, setIsValid] = useState(false);\n  const [used, setUsed] = useState(touchState);\n\n  const nameChangeHandler = event => {\n    setFormData(prevState => ({ ...prevState,\n      name: event.target.value\n    }));\n  };\n\n  const emailChangeHandler = event => {\n    setFormData(prevState => ({ ...prevState,\n      email: event.target.value\n    }));\n  };\n\n  const messageChangeHandler = event => {\n    setFormData(prevState => ({ ...prevState,\n      message: event.target.value\n    }));\n  };\n\n  useEffect(() => {\n    if (isValid) {\n      console.log(formData);\n    }\n  });\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formData.name.trim() === \"\" || formData.email.trim() === \"\" || formData.message.trim() === \"\") {\n      setIsValid(false);\n      return;\n    }\n\n    setIsValid(true);\n    console.log(formData);\n  };\n\n  const nameBlurHandler = event => {\n    setUsed(usedState => ({ ...usedState,\n      name: true\n    }));\n\n    if (formData.name.trim() === \"\") {\n      setIsValid(false);\n      return;\n    }\n\n    console.log(touchState);\n  };\n\n  const emailBlurHandler = event => {\n    setUsed(prevState => ({ ...prevState,\n      email: true\n    }));\n\n    if (formData.email.trim() === \"\") {\n      setIsValid(false);\n      return;\n    }\n  };\n\n  const messageBlurHandler = event => {\n    setUsed(prevState => ({ ...prevState,\n      message: true\n    }));\n\n    if (formData.message.trim() === \"\") {\n      setIsValid(false);\n      return;\n    }\n  };\n\n  const nameCheck = !isValid && used.name;\n  const emailCheck = !isValid && used.email;\n  const messageCheck = !isValid && used.message;\n  const inputInvalid = !used.name && !used.email && !used.message && isValid;\n  console.log(used);\n  console.log(formData);\n  console.log(isValid);\n  console.log(inputInvalid);\n\n  const formComponent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n      children: \"Contact Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        id: \"name\",\n        errorClass: nameCheck,\n        labelName: \"Name\",\n        min: 1,\n        inputValue: formData.name,\n        inputChange: nameChangeHandler,\n        onBlur: nameBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        id: \"email\",\n        errorClass: emailCheck,\n        labelName: \"Email\",\n        min: 1,\n        inputValue: formData.email,\n        inputChange: emailChangeHandler,\n        onBlur: emailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormMessage, {\n        id: \"message\",\n        errorClass: messageCheck,\n        labelName: \"Message\",\n        rows: 5,\n        messageValue: formData.message,\n        messageChange: messageChangeHandler,\n        onBlur: messageBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), !inputInvalid && /*#__PURE__*/_jsxDEV(FormError, {\n        children: \"Please fill in all sections\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(FormControls, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"contact-form\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: formComponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Form, \"G9NCXjz/eI0lEVwSBavCx1eCpYQ=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/Work/cv-react/src/components/Form/Form.tsx"],"names":["Card","CardTitle","useState","FormInput","FormMessage","ContactForm","Button","FormControls","FormError","useEffect","formState","name","email","message","touchState","Form","formData","setFormData","isValid","setIsValid","used","setUsed","nameChangeHandler","event","prevState","target","value","emailChangeHandler","messageChangeHandler","console","log","submitHandler","preventDefault","trim","nameBlurHandler","usedState","emailBlurHandler","messageBlurHandler","nameCheck","emailCheck","messageCheck","inputInvalid","formComponent"],"mappings":"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","sourcesContent":["import { Card, CardTitle } from \"../UI/Card\";\r\nimport { useState } from \"react\";\r\nimport FormInput from \"./FormInput\";\r\nimport FormMessage from \"./FormMessage\";\r\nimport { ContactForm, Button, FormControls, FormError } from \"./FormStyles\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst formState: { name: string; email: string; message: string } = {\r\n  name: \"\",\r\n  email: \"\",\r\n  message: \"\",\r\n};\r\n\r\nconst touchState: { name: boolean; email: boolean; message: boolean } = {\r\n  name: false,\r\n  email: false,\r\n  message: false,\r\n};\r\n\r\nconst Form = () => {\r\n  const [formData, setFormData] = useState(formState);\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [used, setUsed] = useState(touchState);\r\n\r\n  const nameChangeHandler = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    setFormData((prevState) => ({ ...prevState, name: event.target.value }));\r\n  };\r\n\r\n  const emailChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormData((prevState) => ({ ...prevState, email: event.target.value }));\r\n  };\r\n\r\n  const messageChangeHandler = (\r\n    event: React.ChangeEvent<HTMLTextAreaElement>\r\n  ) => {\r\n    setFormData((prevState) => ({ ...prevState, message: event.target.value }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isValid) {\r\n      console.log(formData);\r\n    }\r\n  });\r\n\r\n  const submitHandler = (event: any) => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      formData.name.trim() === \"\" ||\r\n      formData.email.trim() === \"\" ||\r\n      formData.message.trim() === \"\"\r\n    ) {\r\n      setIsValid(false);\r\n      return;\r\n    }\r\n\r\n    setIsValid(true);\r\n    console.log(formData);\r\n  };\r\n\r\n  const nameBlurHandler = (event : React.ChangeEvent<HTMLInputElement>) => {\r\n    setUsed((usedState) => ({ ...usedState, name: true }));\r\n\r\n    if (formData.name.trim() === \"\") {\r\n      setIsValid(false);\r\n      return;\r\n    }\r\n\r\n    console.log(touchState);\r\n  };\r\n\r\n  const emailBlurHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUsed((prevState) => ({ ...prevState, email: true }));\r\n\r\n    if (formData.email.trim() === \"\") {\r\n      setIsValid(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const messageBlurHandler = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setUsed((prevState) => ({ ...prevState, message: true }));\r\n\r\n    if (formData.message.trim() === \"\") {\r\n      setIsValid(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const nameCheck = !isValid && used.name;\r\n  const emailCheck = !isValid && used.email;\r\n  const messageCheck = !isValid && used.message;\r\n\r\n  const inputInvalid = !used.name && !used.email && !used.message && isValid;\r\n\r\n  console.log(used);\r\n  console.log(formData);\r\n  console.log(isValid);\r\n  console.log(inputInvalid)\r\n\r\n  const formComponent = (\r\n    <>\r\n      <CardTitle>Contact Form</CardTitle>\r\n      <ContactForm onSubmit={submitHandler}>\r\n        <FormInput\r\n          id=\"name\"\r\n          errorClass={nameCheck}\r\n          labelName=\"Name\"\r\n          min={1}\r\n          inputValue={formData.name}\r\n          inputChange={nameChangeHandler}\r\n          onBlur={nameBlurHandler}\r\n        />\r\n        <FormInput\r\n          id=\"email\"\r\n          errorClass={emailCheck}\r\n          labelName=\"Email\"\r\n          min={1}\r\n          inputValue={formData.email}\r\n          inputChange={emailChangeHandler}\r\n          onBlur={emailBlurHandler}\r\n        />\r\n        <FormMessage\r\n          id=\"message\"\r\n          errorClass={messageCheck}\r\n          labelName=\"Message\"\r\n          rows={5}\r\n          messageValue={formData.message}\r\n          messageChange={messageChangeHandler}\r\n          onBlur={messageBlurHandler}\r\n        />\r\n        {!inputInvalid && <FormError>Please fill in all sections</FormError>}\r\n        <FormControls>\r\n          <Button>Cancel</Button>\r\n          <Button type=\"submit\">Send</Button>\r\n        </FormControls>\r\n      </ContactForm>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <section id=\"contact-form\">\r\n        <Card>{formComponent}</Card>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}